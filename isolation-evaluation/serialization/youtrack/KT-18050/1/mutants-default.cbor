øiexportTaggdefaultnoriginalSampleyè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

gmutantsüy// Original bug: KT-18389
// Duplicated bug: KT-18050


val y = false
when (y) {
 true -> {class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }}
 else -> {class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }}
}


y≈// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen
val o = false
try
{(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    )}
catch(e: Exception){}
finally{}
 : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        
val b = false
when (b) {
 true -> {override fun generateDeclaration() {
            throw IllegalStateException()
        }}
 else -> {override fun generateDeclaration() {
            throw IllegalStateException()
        }}
}


        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yƒ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        
val d = true
try
{override fun generateBody() {
            throw IllegalStateException()
        }}
catch(e: Exception){}
finally{}


        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yƒ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        
val v = true
try
{override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }}
catch(e: Exception){}
finally{}


        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y2// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        
val d = true
when (d) {
 true -> {override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }}
 else -> {override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }}
}


        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yƒ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        
val z = true
try
{override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }}
catch(e: Exception){}
finally{}

    }

yË// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            
val q = true
when (q) {
 true -> {private val delegate: MemberCodegen<*>}
 else -> {private val delegate: MemberCodegen<*>}
}
,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y∆// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            
val l = false
if (l) {declaration: KtElement} else {declaration: KtElement}
,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yƒ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            
val o = true
try
{codegenContext: FieldOwnerContext<*>}
catch(e: Exception){}
finally{}
,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÃ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            
val d = true
if (d) {private val className: String} else {private val className: String}

    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y›// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : 
val c = false
if (c) {org.jetbrains.kotlin.codegen.MemberCodegen<*>} else {org.jetbrains.kotlin.codegen.MemberCodegen<*>}
(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y‰// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() 
val k = true
if (k) {{
            throw IllegalStateException()
        }} else {{
            throw IllegalStateException()
        }}


        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y¯// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() 
val z = false
when (z) {
 true -> {{
            throw IllegalStateException()
        }}
 else -> {{
            throw IllegalStateException()
        }}
}


        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÂ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() 
val t = false
if (t) {{
            throw IllegalStateException()
        }} else {{
            throw IllegalStateException()
        }}


        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÍ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator 
val o = true
if (o) {{
            return delegate.inlineNameGenerator
        }} else {{
            return delegate.inlineNameGenerator
        }}


        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y◊// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String 
val l = true
if (l) {{
            return className
        }} else {{
            return className
        }}

    }

yƒ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            
val q = true
try
{throw IllegalStateException()}
catch(e: Exception){}
finally{}

        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÕ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            
val w = false
if (w) {throw IllegalStateException()} else {throw IllegalStateException()}

        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y‡// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            
val e = false
when (e) {
 true -> {throw IllegalStateException()}
 else -> {throw IllegalStateException()}
}

        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yƒ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            
val o = true
try
{return delegate.inlineNameGenerator}
catch(e: Exception){}
finally{}

        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yƒ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            
val n = true
try
{return className}
catch(e: Exception){}
finally{}

        }
    }

yƒ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(
val p = true
try
{delegate}
catch(e: Exception){}
finally{}
, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yƒ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, 
val a = true
try
{declaration}
catch(e: Exception){}
finally{}
, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y–// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, 
val i = true
when (i) {
 true -> {codegenContext}
 else -> {codegenContext}
}
) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yŸ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw 
val v = true
when (v) {
 true -> {IllegalStateException()}
 else -> {IllegalStateException()}
}

        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y≈// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw 
val n = false
try
{IllegalStateException()}
catch(e: Exception){}
finally{}

        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yƒ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw 
val b = true
try
{IllegalStateException()}
catch(e: Exception){}
finally{}

        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yº// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): 
val x = true
if (x) {NameGenerator} else {NameGenerator}
 {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yﬁ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return 
val y = true
when (y) {
 true -> {delegate.inlineNameGenerator}
 else -> {delegate.inlineNameGenerator}
}

        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yµ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): 
val y = true
if (y) {String} else {String}
 {
            return className
        }
    }

yÃ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return 
val d = false
when (d) {
 true -> {className}
 else -> {className}
}

        }
    }

yº// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: 
val v = true
if (v) {MemberCodegen} else {MemberCodegen}
<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yƒ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: 
val u = true
try
{KtElement}
catch(e: Exception){}
finally{}
,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y‘// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: 
val t = false
when (t) {
 true -> {FieldOwnerContext}
 else -> {FieldOwnerContext}
}
<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yµ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: 
val d = true
if (d) {String} else {String}

    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y–// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.
val q = false
when (q) {
 true -> {MemberCodegen}
 else -> {MemberCodegen}
}
<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yƒ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw 
val q = true
try
{IllegalStateException}
catch(e: Exception){}
finally{}
()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y≈// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw 
val t = false
try
{IllegalStateException}
catch(e: Exception){}
finally{}
()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yƒ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw 
val v = true
if (v) {IllegalStateException} else {IllegalStateException}
()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÀ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return 
val z = false
when (z) {
 true -> {delegate}
 else -> {delegate}
}
.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y÷// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.
val v = false
when (v) {
 true -> {inlineNameGenerator}
 else -> {inlineNameGenerator}
}

        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yƒ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.
val i = true
try
{codegen}
catch(e: Exception){}
finally{}
.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y…// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.
val p = false
when (p) {
 true -> {kotlin}
 else -> {kotlin}
}
.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y∏// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.
val t = true
if (t) {jetbrains} else {jetbrains}
.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y≥// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : 
val g = false
if (g) {org} else {org}
.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

x:// Original bug: KT-18389
// Duplicated bug: KT-18050

(

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator ({
            return delegate.inlineNameGenerator
        })

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw (IllegalStateException())
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): (NameGenerator) {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.(MemberCodegen)<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()!!
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator!!
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String!! {
            return className
        }
    }

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen!!<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen!!<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yí// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): (NameGenerator)? {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yí// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): (String)? {
            return className
        }
    }

yí// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: (MemberCodegen<*>)?,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yí// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: (KtElement)?,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yí// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: (FieldOwnerContext<*>)?,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yí// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: (String)?
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yí// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : (org.jetbrains.kotlin.codegen.MemberCodegen<*>)?(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin!!.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains!!.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org!!.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: ),
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(MemberCodegen<*>: NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            IllegalStateException() val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw private
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*(,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>>delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.return<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            MemberCodegen className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: {<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() MemberCodegen
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: },
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        KtElement
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        NameGenerator

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): } {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() delegate
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return {.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegenorg.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext)
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : ( {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        } fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        override

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen{

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    },
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) <*>

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<(>*delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            kotlin,
            private val className: String
    ) : org.jetbrains.codegenContext: FieldOwnerContext<*>.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
        }

        return delegate.inlineNameGenerator
    }

yè// Original bug: KT-18389
,

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>// Duplicated bug: KT-18050
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegenthrow,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            <*> IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() String
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): { {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegenfun*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override < generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: :
    ) String org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<private>,
            * val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegenthrow IllegalStateException()MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            .
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org...kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegatejetbrainsinlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        codegenContext

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.override.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        jetbrains //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*getClassName,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun >(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBodyString) {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): ( {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<{>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() *
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException(}
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        )
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : .orgjetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() override

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        {
            throw IllegalStateException()
        } //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val classNameoverride fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        } String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        :

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotationfun {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        () getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: )
    String : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        delegate fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return override.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        IllegalStateException

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw }()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegateval MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private : className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext),
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : > {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: (,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateExceptionFieldOwnerContext<*>)
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declarationfun codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override , generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException({
            return className
        }
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String )
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): } {
            return className
        String
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            getClassName
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun throw IllegalStateException()(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: )<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException(FieldOwnerContext
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: ,,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declarationKtElement codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : {
            return className
        }.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String org.jetbrains.kotlin.codegen
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            ),
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody(private val delegate: MemberCodegen<*> {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegenorg.jetbrains : (
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ).kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate} declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        ,

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : inlineNameGenerator(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.org.jetbrains.kotlin.codegen.MemberCodegen<*>
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, {, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() declaration
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.{
            throw IllegalStateException()
        }.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() kotlin

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.generateKotlinMetadataAnnotation.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun kotlin() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val }: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        delegate

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() )
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator({: NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) fun org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        : getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: return
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            String delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElementNameGenerator
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): , {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            : val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName()private String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<.>,
            private val className: String
    ) : org.jetbrains.kotlin*codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : }.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        org.jetbrains.kotlin.codegen
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : IllegalStateException.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw org()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : override {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            override
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        throw IllegalStateException() fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException)
        }

        override fun generateKotlinMetadataAnnotation(() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override generateKotlinMetadataAnnotation generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun fun() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<delegate.inlineNameGenerator>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return *
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            ): FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException(codegenContext
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            : val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) private org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: override fun generateBody() {
            throw IllegalStateException()
        },
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        KtElement

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContextNameGenerator FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): : {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: codegenContext,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, FieldOwnerContext<*>) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: delegate,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(FieldOwnerContext<*>, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw }()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        IllegalStateException

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        delegate
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            { val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() private
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration) codegenContext, {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: declaration: KtElement,
            MemberCodegen<*>,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegencodegen : org.jetbrains.kotlin.(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ).MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            delegate.inlineNameGenerator IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return throw
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.override.MemberCodegen<*>(delegate, declaration, codegenContext) {

        codegen fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.().codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassNamekotlin: String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateExceptiongetClassName
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun ()(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegendeclaration*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, <, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) < org.jetbrains.kotlin.codegen.MemberCodegen:*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        },
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        FieldOwnerContext<*>

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext{,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() <*>
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
MemberCodegen

class FakeMemberCodegen(
            private val delegate: // Duplicated bug: KT-18050<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            return val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            private className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<}>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        *

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>((, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassNamedelegate): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin()codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration. {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateExceptionString)
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): ( {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() String

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): {
            throw IllegalStateException()
        } {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() className

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return {
            throw IllegalStateException()
        }
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: kotlin,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.KtElement.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè(
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation// Original bug: KT-18389) {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        ()

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassNameoverride fun generateBody() {
            throw IllegalStateException()
        }: String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: {,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() MemberCodegen<*>
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: ()<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGeneratorFieldOwnerContext: NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val throw: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            delegate IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yèclass FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }
// Duplicated bug: KT-18050

// Original bug: KT-18389

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            fun,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override private val delegate: MemberCodegen<*> generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, () {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotationcodegenContext) {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className. String
    ) : org.jetbrains.kotlin.codegen:MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            fun val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        private getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, generateDeclaration) {

        override fun codegenContext() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException})
        (

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return return.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            delegate className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw return delegate.inlineNameGenerator
        }

        override fun getInlineNameGenerator(): NameGenerator {
            IllegalStateException()
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.override fun generateDeclaration() {
            throw IllegalStateException()
        }<*>(delegate, declaration, codegenContext) {

        MemberCodegen

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private getClassName className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun val(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<.>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains*kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : )(delegate, declaration, codegenContext) {

        override fun generateDeclaration(org.jetbrains.kotlin.codegen.MemberCodegen<*> {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate<*> MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen:(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(codegenContext, declaration, delegate) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : String.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): org {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException(IllegalStateException
        }

        override fun generateBody() {
            throw )()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private {
            throw IllegalStateException()
        } delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() val

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody{ {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() ()
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private ) className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(val: String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>{
            throw IllegalStateException()
        }delegate, declaration, codegenContext) {

        override fun generateDeclaration() (

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            .,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegendeclaration: KtElementMemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override {
            throw IllegalStateException()
        } generateDeclaration() fun

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: IllegalStateException<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw MemberCodegen()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: :,
            declarationMemberCodegen<*> KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun }() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    generateBody

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, throw, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            declaration IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate) MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException(:
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBodyIllegalStateException) {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw (()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) () org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody: {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: ,<*>FieldOwnerContext
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() return

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            {
            throw IllegalStateException()
        } delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<<*>>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen*(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*jetbrains,
            private val className: String
    ) : org.>.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            },
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        codegenContext: FieldOwnerContext<*>

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegencodegenContext,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, <*>) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext),
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException(<*>
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: return className,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            KtElement
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() ()
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator{: NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>org.jetbrains.kotlin.codegen.MemberCodegen<*>
            private val className: String
    ) : ,(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegenMemberCodegen : org.jetbrains.kotlin.codegen.(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    )<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: return delegate.inlineNameGenerator,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            MemberCodegen<*>
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private , delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegateval declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        inlineNameGenerator

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.}
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: IllegalStateException(),
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw MemberCodegen<*>
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, }, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        declaration

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: declaration<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, FieldOwnerContext, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.(delegate, declaration, codegenContext).codegen.MemberCodegen<*>kotlin {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

org FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : class.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        delegate.inlineNameGenerator fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return override
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext{
            throw IllegalStateException()
        },
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() <*>

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        } fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: codegen
    ) : org.jetbrains.kotlin.String.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun inlineNameGenerator() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.generateBody
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : ()(delegate, declaration, codegenContext) {

        override fun generateDeclarationorg.jetbrains.kotlin.codegen.MemberCodegen<*> {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: throw IllegalStateException(),
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            FieldOwnerContext<*>
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : return(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            org.jetbrains.kotlin.codegen.MemberCodegen<*> delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        } fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContextgenerateBody*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun <() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() ()
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation{ {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : {
            throw IllegalStateException()
        }.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() org.jetbrains

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: org.jetbrains
    ) : String.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException(fun
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        ) getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            jetbrains val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.private.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen{
            return delegate.inlineNameGenerator
        } : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator (
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    )

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegenfunMemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        . getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, ()) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassNamecodegenContext: String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(className: NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return )
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: return,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            FieldOwnerContext<*> className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>: {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName()(delegate, declaration, codegenContext) String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val {: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String delegate
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : } {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext)
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.delegate.inlineNameGenerator<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return MemberCodegen
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*:,
            private val className> String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContextIllegalStateException FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw :()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        getInlineNameGenerator

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun override fun generateDeclaration() {
            throw IllegalStateException()
        }(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: >,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*KtElement(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() IllegalStateException()
            throw {
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            <,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegencodegenContext: FieldOwnerContext<*>*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        inlineNameGenerator fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.override
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            ( val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>privatedelegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) )

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException({
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw String()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): IllegalStateException {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*IllegalStateException(),
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw >
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : override(delegate, declaration, codegenContext) {

        org.jetbrains.kotlin.codegen.MemberCodegen<*> fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw override()
        }

        IllegalStateException fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
(

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName// Duplicated bug: KT-18050): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegeninlineNameGenerator*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.<
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.)<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException(MemberCodegen
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: delegate.inlineNameGenerator
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return String
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            : val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val classNameprivate String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen() : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException{)
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String (
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration{ {
            throw IllegalStateException()
        }

        override fun generateBody() ()
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<{>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator *
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        override

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        } //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, }) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        codegenContext

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : }.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    org.jetbrains.kotlin

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>(
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException,)
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            < val delegate: MemberCodegenprivate*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext:,
            private val className<*> String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            MemberCodegen: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.declaration<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassNameclassName): String {
            return (
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegenNameGenerator : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): (
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org{jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() .
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateExceptionIllegalStateException
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw ()()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            throw val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            private IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        getClassName fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun override(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            throw: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            codegenContext IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : orgoverridejetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        . fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBodydelegate.inlineNameGenerator) {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return (
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody}) {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        (

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            (,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclarationprivate val delegate: MemberCodegen<*>) {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: {,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) MemberCodegen<*>

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun ()() {
            throw IllegalStateExceptiongenerateBody
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

KtElement FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: class,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): return delegate.inlineNameGenerator {
            NameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: ),
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation(MemberCodegen<*> {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>org.jetbrains.kotlin.codegen
            private val className: String
    ) : ,.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private org className: String
    ) : val.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, ), codegenContext) {

        override fun generateDeclaration(declaration {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val org.jetbrains: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : delegate.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException))
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator((: NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, fun, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override declaration getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: ),
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    KtElement : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBodyNameGenerator) {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): ( {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            ) val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException(private
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        getInlineNameGenerator fun override(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: (<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateExceptionFieldOwnerContext)
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*(,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException>)
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): delegate {
            return NameGenerator.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : } {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext)

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<(>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException*)
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: (<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotationMemberCodegen) {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override override generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        fun fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(return, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            delegate delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : return delegate.inlineNameGenerator(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            org.jetbrains.kotlin.codegen.MemberCodegen<*>
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: org
    ) : String.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContextoverride fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        } {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        )

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw fun()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        IllegalStateException getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : throw(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            org.jetbrains.kotlin.codegen.MemberCodegen<*> IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            KtElement: declaration,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    {
            throw IllegalStateException()
        }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.,<*>(delegateMemberCodegen declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.)
        }

        override //TODO: obtain name from context
        fun getClassName(inlineNameGenerator: String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private return className delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            val
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            throw IllegalStateException(): FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            codegenContext
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.NameGenerator.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): kotlin {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : orgStringjetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): . {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>}
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    ,

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContextString,
            private val className: <*>
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: (),
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBodyKtElement {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegenorg.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext)*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : < {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<declaration>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, *, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class )(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration(FakeMemberCodegen {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw return()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            IllegalStateException className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*{

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }(delegate, declaration, codegenContext) >

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlinoverride //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        .
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: fun<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override FieldOwnerContext generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.:.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator()kotlin NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.getClassName.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun kotlin(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            delegate: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return declaration.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<override>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        * fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : throw IllegalStateException().codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            org.jetbrains.kotlin
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private override className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        val fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: jetbrains<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.MemberCodegen.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: ()
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateExceptionString
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: getClassName,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun FieldOwnerContext<*>(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclarationthrow {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            () IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegenfun : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override (
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen()*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration< {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: fun
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override String generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException:
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName()() String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: (,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGeneratorMemberCodegen<*>): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: org,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : KtElement.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }(delegate, declaration, codegenContext) org.jetbrains.kotlin.codegen.MemberCodegen<*>

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotationoverride {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        () //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*{

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    },
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) >

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBodyreturn className) {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            (
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: KtElement<*>,
            declaration: MemberCodegen,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val org.jetbrains: String
    ) : className.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: }
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        String

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains{
            throw IllegalStateException()
        }kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() .

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContextdelegate.inlineNameGenerator,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return <*>
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext{
            throw IllegalStateException()
        } FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() :

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    className : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return )
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: String,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): KtElement {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override ) generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(fun: String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(return delegate.inlineNameGenerator: NameGenerator {
            )
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlininlineNameGeneratorcodegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate..
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegenIllegalStateException : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw (
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    )()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContextIllegalStateException,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw <*>()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElementfun
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override , generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun generateDeclaration() {
            throw IllegalStateException()
        } fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
fun

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        // Duplicated bug: KT-18050 getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    NameGenerator : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): ) {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declarationclassName KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val :: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: generateDeclaration<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun MemberCodegen() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : orgfunjetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override . generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() ()
            throw IllegalStateException()
        }

        override fun generateBody{ {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegenfun(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override <*> getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè,
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>// Original bug: KT-18389
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.return className
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            inlineNameGenerator
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: delegate<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(MemberCodegen, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        //TODO: obtain name from context fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override override
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): className {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return NameGenerator
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        IllegalStateException() fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw override
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            inlineNameGenerator
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.throw IllegalStateException()
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: IllegalStateException,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw KtElement()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            IllegalStateException val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw private()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val {
            throw IllegalStateException()
        }: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() className

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw delegate
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return IllegalStateException().inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            codegenContext
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, private val className: String) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : val {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: {<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) FieldOwnerContext

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        NameGenerator

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): override fun generateBody() {
            throw IllegalStateException()
        } {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen()(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator<*>: NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.).kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContextjetbrains {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegenjetbrains : org.(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ).kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override () generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGeneratorfun: NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: (),
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateExceptionKtElement
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    } : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        )

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val throw IllegalStateException(): MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            delegate
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: override,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        FieldOwnerContext<*> fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegenFieldOwnerContext<*>,
            declaration: KtElement,
            codegenContext: <*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        return

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        } className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private <*> delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegenval(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<{>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() *
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*}(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        >

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            {
            return className
        }
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String throw IllegalStateException()
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw inlineNameGenerator
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.IllegalStateException()
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
(

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation// Duplicated bug: KT-18050) {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : orgreturn classNamejetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            .
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: generateBody,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun KtElement() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : throw IllegalStateException().jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            org
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.override fun generateBody() {
            throw IllegalStateException()
        }.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        kotlin

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        { fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator override
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
class

// Duplicated bug: KT-18050 FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun String() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): generateDeclaration {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.}<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        MemberCodegen

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin}codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        .

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: generateBody<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun MemberCodegen() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw ()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGeneratorIllegalStateException(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration{) {
            throw IllegalStateException()
        }

        override fun generateBody() (
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw override()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        IllegalStateException fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw {()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String IllegalStateException
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration(. {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate)inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : override(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        org.jetbrains.kotlin.codegen.MemberCodegen<*> fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, NameGenerator, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): declaration {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>{
            throw IllegalStateException()
        }
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() ,

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
delegate

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(// Duplicated bug: KT-18050, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() className

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return {
            throw IllegalStateException()
        }
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: ),
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration(FieldOwnerContext<*> {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<)>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException(*
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.}.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        codegen
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            , val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declarationprivate codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGeneratorclassName: NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return ()
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.().MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBodycodegen {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: kotlin<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.MemberCodegen.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateExceptionIllegalStateException())
        }

        override fun generateBody() {
            throw (
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElementString
            codegenContext: FieldOwnerContext<*>,
            private val className: ,
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : override(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        org.jetbrains.kotlin.codegen.MemberCodegen<*> fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: throw,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            MemberCodegen<*> IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: org,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : MemberCodegen<*>.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<delegate>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(*, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            (),
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateExceptiondeclaration: KtElement
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val inlineNameGenerator: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.className
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>{

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    } (delegate, declaration, codegenContext)

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*override,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        > //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FieldOwnerContext<*>(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FakeMemberCodegen,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.delegate.codegen.MemberCodegen<*>(kotlin, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>throw
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            , IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
)

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    // Duplicated bug: KT-18050 : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            override,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        private val delegate: MemberCodegen<*> fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            String delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): return {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declarationString codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): , {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : fun.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        org getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<(>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody*) {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, )) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody(codegenContext {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElementdelegate
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(,, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException{
            throw IllegalStateException()
        })
        }

        override fun generateKotlinMetadataAnnotation() (

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateExceptionfun)
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        ( getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            String,
            private val className: codegenContext: FieldOwnerContext<*>
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: val,
            codegenContext: FieldOwnerContext<*>,
            private KtElement className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.)<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException(MemberCodegen
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(String, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): delegate {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlinNameGeneratorcodegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): . {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        {
            return delegate.inlineNameGenerator
        } fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator override

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.String.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): kotlin {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            inlineNameGenerator val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.private
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        return className fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            override
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElementgenerateKotlinMetadataAnnotation
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun ,() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotationoverride) {
            throw IllegalStateException()
        }

        ( fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            } val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    private

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<declaration>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, *, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>KtElement
            declaration: ,,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            IllegalStateException() val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw private
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            {
            return delegate.inlineNameGenerator
        } val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator private

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            IllegalStateException(),
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw private val delegate: MemberCodegen<*>
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

{
            throw IllegalStateException()
        } FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() class

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declarationIllegalStateException() KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw :
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: declaration,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, MemberCodegen<*>, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw (()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassNameIllegalStateException): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: throw IllegalStateException(),
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            KtElement
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>IllegalStateException()
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw ,
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: //TODO: obtain name from context,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override FieldOwnerContext<*>
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw throw IllegalStateException()()
        }

        override fun generateKotlinMetadataAnnotation() {
            IllegalStateException
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            org val className: String
    ) : private.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override override generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        fun //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen. : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    )inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            String IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): throw {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegateoverride declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        , fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override return generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            fun delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.}<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        MemberCodegen
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException(IllegalStateException
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw )()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrainsgenerateKotlinMetadataAnnotationkotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun .() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException((
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    )
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: override,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        FieldOwnerContext<*> fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.throw IllegalStateException().kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            jetbrains
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<IllegalStateException>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw *()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw :
        }

        override fun getInlineNameGenerator()IllegalStateException() NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: <*>,
            codegenContext: FieldOwnerContextKtElement,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: declaration,
            MemberCodegen<*>: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) }

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        {
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override { generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() fun
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*(,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation>) {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() String

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): {
            throw IllegalStateException()
        } {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: IllegalStateException(),
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw KtElement
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotationgetClassName) {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun ((): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.{
            throw IllegalStateException()
        }<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() MemberCodegen

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        generateBody

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : IllegalStateException.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw org()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            * val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<private>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
.

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin// Duplicated bug: KT-18050codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: fun<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override MemberCodegen generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    org.jetbrains.kotlin.codegen : ).MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<{
            throw IllegalStateException()
        }>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() *

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            ,,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declarationprivate val delegate: MemberCodegen<*> codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            inlineNameGenerator val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.private
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegenorg : (
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ).jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: (,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateExceptionMemberCodegen<*>)
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override () generateBodyfun {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) className org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return :
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: ),
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody(KtElement {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody({
            throw IllegalStateException()
        } {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() )

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: codegenContext: FieldOwnerContext<*>,
            declaration: KtElement,
            MemberCodegen<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : ().jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotationorg {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw return delegate.inlineNameGenerator()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            IllegalStateException
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private IllegalStateException delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw val()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegenoverride,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        <*> fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        {
            return delegate.inlineNameGenerator
        } fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator override

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : {
            throw IllegalStateException()
        }.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() org

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<generateKotlinMetadataAnnotation>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun *() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>Stringdelegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): ( {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: IllegalStateException,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw KtElement()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.override fun generateDeclaration() {
            throw IllegalStateException()
        }.MemberCodegen<*>(delegate, declaration, codegenContext) {

        codegen

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen( : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    )): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegenoverride*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        < //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw inlineNameGenerator()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.IllegalStateException
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: .<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegateMemberCodegeninlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen(*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody<) {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            :: FieldOwnerContext<*>,
            private val className: String
    ) codegenContext org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            ) IllegalStateException(throw
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : }(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        org.jetbrains.kotlin.codegen.MemberCodegen<*>
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: {,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) KtElement

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: ()
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclarationString {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        NameGenerator fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): override {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        )

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(override fun generateBody() {
            throw IllegalStateException()
        }: String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContextthrow IllegalStateException() FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            :
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            (),
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotationprivate val delegate: MemberCodegen<*> {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody}) {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        (

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val <*>: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegendelegate(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            org.jetbrains val className: String
    ) : private.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            org.jetbrains.kotlin.codegen.MemberCodegen<*>,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : declaration: KtElement(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val (): String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotationclassName {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegatethrow IllegalStateException() declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            ,
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody(throw IllegalStateException() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            )
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè(
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>// Original bug: KT-18389delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration) KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(:: NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<>*(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: {
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() String
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException(generateKotlinMetadataAnnotation
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun )() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContextNameGenerator*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): < {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw inlineNameGenerator()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.IllegalStateException
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<}>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        *

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class }(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        FakeMemberCodegen

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<()>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody* {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegenval,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private <*> className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun ()() {
            throw IllegalStateExceptiongenerateKotlinMetadataAnnotation
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext(*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation<) {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>IllegalStateException() {

        override fun generateDeclaration() {
            throw (delegate, declaration, codegenContext)
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : override.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        org.jetbrains fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw override
        }

        IllegalStateException() fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: )<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation(MemberCodegen {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: override
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        String fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlinIllegalStateExceptioncodegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw .()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegenoverride fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        <*>

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() ()

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation{
            throw IllegalStateException()
        } {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override : generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName()fun String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContextoverride fun generateBody() {
            throw IllegalStateException()
        } {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        )

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw NameGenerator()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): IllegalStateException {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.override.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        kotlin fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.NameGenerator.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): jetbrains {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation) {
            throw IllegalStateException(()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    override fun generateBody() {
            throw IllegalStateException()
        } : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        )

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) org.jetbrains.kotlin.codegen.MemberCodegen<*> :(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: org.jetbrains,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : KtElement.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            String
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): throw IllegalStateException() {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            return className
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            private val className: String
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw {
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String IllegalStateException()
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: )
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(String: String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() )
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException({
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.delegate.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return jetbrains.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegenNameGenerator*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): < {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            }
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        throw IllegalStateException()

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : override.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        org.jetbrains.kotlin.codegen //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw className()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return IllegalStateException
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException(override
        }

        ) fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: String,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): MemberCodegen<*> {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen{*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String <
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : } {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext)

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen(*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation<) {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen{
            return className
        }*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String <
    }

y}// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw foo()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y’// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override // Auto-generated by org.jetbrains.kotlin.generators.tests.GenerateRangesCodegenTestData. DO NOT EDIT!
        fun getClassName(): String {
            return className
        }
    }

yã// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        data fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y{// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw A()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y&// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
    if (!myEquals(null, null)) return "fail 1"
    if (myEquals(null, 0.0F)) return "fail 2"
    if (myEquals(0.0F, null)) return "fail 3"
    if (!myEquals(0.0F, 0.0F)) return "fail 4"

    if (myEquals1(null, 0.0F)) return "fail 5"
    if (!myEquals1(0.0F, 0.0F)) return "fail 6"

    if (myEquals2(0.0F, null)) return "fail 7"
    if (!myEquals2(0.0F, 0.0F)) return "fail 8"

    if (!myEquals0(0.0F, 0.0F)) return "fail 9"

    return "OK"
}
    }

yç// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        public fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÑ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.sb<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.String.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y•// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(a: Double?, b: Double?): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: String,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÑ// Original bug: KT-18389
// Duplicated bug: KT-18050

class String(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yS// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        fun bar(x: Comparable<Int>) = if (x is Int) foo(x) else 0
    }

y}// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw box()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yï// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : ArrayList.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            f: () -> Unit
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y†// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        fun box(): String {
    var x: MutableCollection<Int> = ArrayList()
    x + ArrayList()
    return "OK"
}

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÅ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : String.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yí// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<Long>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): T {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val String: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val C: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yh// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : String(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return b
        }
    }

yÑ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw append(this)
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.X.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yê// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            operator val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y{// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        inline fun foo(a: A, block: (A) -> String): String = block(a)

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yê// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException(o)
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun box() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y^// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() "OK"

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: T<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÅ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: box<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.ArrayList
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yã// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(Long, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: L,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<Int>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yK// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : Foo2(Foo({ s })) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.x.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yt// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(1u, 2u, 3u) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y|// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            funRef:(T,T) -> T,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
    val x: Array<List<*>> = arrayOf(listOf(1))
    val y : Array<in List<String>> = x

    if (y.size != 1) return "fail 1"

    y[0] = listOf("OK")

    return x[0][0] as String
}
    }

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: String,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yû// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return kotlin.UninitializedPropertyAccessException
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y|// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: S,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÉ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw ltDD(NZ, Z)
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y†// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration(val param: String) {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.result.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y}// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.a
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val a2: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        operator fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yf// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        fun box(): String {
    val a = Result<Int>(1) // valueOf
    val b = Result<String>("sample")
    val c = Result<Result<Int>>(a)
    val d = Result<Result<Int>>(Result<Int>(1)) // valueOf

    if (a.a !is Int) throw AssertionError()

    if (b.a !is String) throw AssertionError()

    if (c.a !is Result<*>) throw AssertionError()
    val ca = c.a as Result<*>
    if (ca.a !is Int) throw AssertionError()

    if (d.a !is Result<*>) throw AssertionError()
    val da = d.a as Result<*>
    if (da.a !is Int) throw AssertionError()

    return "OK"
}

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun String(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.Double<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return x
        }
    }

yÕ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
    val result = plusAssign().value
    if (result != 2) return "fail 1: $result"

    return "OK"
}
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw Inner()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y}// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw Int()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÉ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : T.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÅ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: String,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, String) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.Outer.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yX// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        fun foo(): Season = Season.SPRING

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: Int<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yt// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            x: String,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y~// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw ints()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yü// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, AnnotationTarget.EXPRESSION, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw AssertionError()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return foo(B())
        }
    }

yi// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : AFabric(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y}// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.l
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: result,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return outer.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        operator fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw AssertionError("$x")
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yp// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            t: Any?,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÅ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw rangeTo()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): A<IC> {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.B.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yq// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            (a, b),
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw toInt()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: f<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            open val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y{// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw U()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: String<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÙ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
    val a: A = foo()
    val b: Boolean
    when (a) {
        is A.B -> b = true
        is A.C -> b = false
    }
    return if (b) "OK" else "FAIL"
}

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yã// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        open fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<Int>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun str() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yç// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return Derived
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : Data.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yø// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        fun box(): String {
    val list1 = ArrayList<Int>()
    val range1 = 3..9 step 2
    for (i in range1) {
        list1.add(i)
        if (list1.size > 23) break
    }
    if (list1 != listOf<Int>(3, 5, 7, 9)) {
        return "Wrong elements for 3..9 step 2: $list1"
    }

    val list2 = ArrayList<Int>()
    val range2 = 3.toByte()..9.toByte() step 2
    for (i in range2) {
        list2.add(i)
        if (list2.size > 23) break
    }
    if (list2 != listOf<Int>(3, 5, 7, 9)) {
        return "Wrong elements for 3.toByte()..9.toByte() step 2: $list2"
    }

    val list3 = ArrayList<Int>()
    val range3 = 3.toShort()..9.toShort() step 2
    for (i in range3) {
        list3.add(i)
        if (list3.size > 23) break
    }
    if (list3 != listOf<Int>(3, 5, 7, 9)) {
        return "Wrong elements for 3.toShort()..9.toShort() step 2: $list3"
    }

    val list4 = ArrayList<Long>()
    val range4 = 3L..9L step 2L
    for (i in range4) {
        list4.add(i)
        if (list4.size > 23) break
    }
    if (list4 != listOf<Long>(3, 5, 7, 9)) {
        return "Wrong elements for 3L..9L step 2L: $list4"
    }

    val list5 = ArrayList<Char>()
    val range5 = 'c'..'g' step 2
    for (i in range5) {
        list5.add(i)
        if (list5.size > 23) break
    }
    if (list5 != listOf<Char>('c', 'e', 'g')) {
        return "Wrong elements for 'c'..'g' step 2: $list5"
    }

    return "OK"
}

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        abstract fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val a: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yç// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return String.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y|// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun bad(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yì// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException("OK")
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yç// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(String, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: log<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y=// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        fun box(): String {
    var f = Foo("42")
    if (f.x != 2) return "Fail 1: ${f.x}"

    f = Foo(43L)
    if (f.x != 44) return "Fail 2: ${f.x}"

    f = Foo('a')
    if (f.x != 2) return "Fail 3: ${f.x}"

    f = Foo(1, 2)
    if (f.x != 3) return "Fail 4: ${f.x}"

    return global
}

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, 1) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yc// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : B(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÉ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {
    open fun foo(t: T) = "A"
}

yÉ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw Exception()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yt// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun list1() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return b.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yv// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() { throw Exception("oops!") }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y^// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
    val bDefault = A().B()
    val b = A().B("aa", 66, "cc")
    if (bDefault.a == "a" && bDefault.b == 55 && bDefault.c == "c") {
        if (b.a == "aa" && b.b == 66 && b.c == "cc") {
            return "OK"
        }
    }
    return "fail"
}
    }

yu// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            arg2: String,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yì// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.Comparable.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
    A.x += 1
    if (A.x != 1) return "Fail 1: ${A.x}"

    A.x++
    if (A.x != 2) return "Fail 2: ${A.x}"

    ++A.x
    if (A.x != 3) return "Fail 3: ${A.x}"

    return "OK"
}

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(1, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yö// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {
    OK;
    constructor(x: Int = 0) : this(x, "OK")
}

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(inlinedRun, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): String {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.key.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: Int,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.a.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y∞// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
        return "Wrong elements for 5u.toUShort() downTo 5u.toUShort(): $list3"
    }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw AssertionError()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class i(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yí// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw RuntimeException("fail 0")
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yg// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {
    open inner class B(s: String): A(s)

    open inner class C(s: String, additional: Double): B(s)

    open inner class D(other: Int, another: Long, s: String) : C(s, another.toDouble())

    open inner class E : D(0, 42L, "OK")

    inner class F : E()
}

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): C {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: value<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÉ// Original bug: KT-18389
// Duplicated bug: KT-18050

class AsInt(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y⁄// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        fun box(): String {
    var prop: Int by Delegate()
    if (prop != 1) return "fail get"
    prop = 2
    if (prop != 2) return "fail set"
    return "OK"
}

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return String
        }
    }

yÄ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {
    val a = test { this }
}

yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw ArrayList<Char>()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, emptyArray, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): Int {
            return className
        }
    }

yú// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(testWrappingULongLoop, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y|// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return A().foo()
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yï// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return if( v1 == v2 ) "OK" else "$v1 $v2"
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// KJS_WITH_FULL_RUNTIME

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yr// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun Int() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): A<Int> {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: s<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

ys// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            val a: Int,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yX// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        fun box(): String {
    var str2: String = ""
    try {
        str2 = str
        return "Should throw an exception"
    }
    catch (e: UninitializedPropertyAccessException) {
        return "OK"
    }
    catch (e: Throwable) {
        return "Unexpected exception: ${e::class}"
    }
}

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            inline val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: result<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÄ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw String()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return foo.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yf// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : Long(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yk// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : A<String>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

x^// Original bug: KT-18389
// Duplicated bug: KT-18050

class A {
    val s : String = "OK"
}

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, null, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw list3()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.state<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yí// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<UInt>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yí// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val runInlineExt: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, x, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yç// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : i.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yê// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            abstract val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class f(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÅ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.list4
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw list3()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: Any,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return n
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.logged
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y{// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw j()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yi// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : Derived(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yã// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
    val a = Foo("OK")
    return a.asResult()
}

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return x(A())
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return A
        }
    }

yã// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override // !LANGUAGE: +InlineClasses
        fun getClassName(): String {
            return className
        }
    }

yb// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : (delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : String.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.p.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y}// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(if (3 > 2) a else b) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: equals<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yô// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return ZImpl3().test("OK")
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw StringBuilder()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yê// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return ArrayList.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: test<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yç// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        inline fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw AssertionError()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÅ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: key<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, element3, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y£// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
    var s = "s"
    s += 1
    return if (s == "s1") "OK" else "fail"
}

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw run {
    { it }
}
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yõ// Original bug: KT-18389
// !LANGUAGE: +ProperIeee754Comparisons

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yí// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : String.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÉ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): A {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yª// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {
    var x : Int = 0
        private set

    fun foo() {
        ({ x = 4 })()
    }
}

y™// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        fun box(): String = when {
    '0' in charSeq -> "fail 1"
    '1' !in charSeq -> "fail 2"
    else -> "OK"
}

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw shouldReturn11()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return v.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÉ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: Any?,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<T>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(box, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yo// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : HashSet<Long>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y{// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw A()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yê// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : kotlin.reflect.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y≥// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
    var s = ""
    for (c in StringBuilder("OK")) {
        s += c
    }
    return s
}

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: listOf<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, 2, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val foo: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.b.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÑ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun x() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y{// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw i()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÅ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw private()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override // IGNORE_BACKEND: NATIVE
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val Class: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yù// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<String, Boolean>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y}// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun a() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun String() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yã// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        open fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.Z.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yA// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : Base() {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

xs// Original bug: KT-18389
// Duplicated bug: KT-18050

interface Hierarchy<T: Persistent > where T : Hierarchy<T>

yî// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<String>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return "OK"
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : PublishedApi.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yw// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return "OK"
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÉ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): a {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y}// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun p() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<Z>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(testR1xE29, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, A, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw value()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y}// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun Test(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y™// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
    if (this == o) return 0
    if (o >= o) {
        return 1
    }
    return -1
}

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yË// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(val a: Foo<String>) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÄ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw toLong()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y\// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {}

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÉ// Original bug: KT-18389
// Duplicated bug: KT-18050

class value(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÉ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw withIndex()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, {x -> C(x)}, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.toInt.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override // KJS_WITH_FULL_RUNTIME
        fun getClassName(): String {
            return className
        }
    }

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            Unit: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÄ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw String()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class X {
    fun test() : String {
        if (this["O"] != "OK") return "fail 1: ${this["O"]}"

        this["O"] += "K"
        if (result != "OKK") return "fail 2: ${result}"

        return "OK"
    }
}

yÑ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): A1 {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// IGNORE_BACKEND: JS_IR

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.bar.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yç// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.sideEffects<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw listOf<Int>(8, 6, 4)
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÉ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        fun isZero(x: Int) = when(x) {
    0 -> true
    else -> throw Exception()
}

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÄ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw Season()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yv// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            val from: C,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val c: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÑ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, box) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.I.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: str,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : UInt.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yë// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
    if (giil.iis[0].i != 42) throw AssertionError()
}

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<C>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            result: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yn// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : CharSequence(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y÷// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen() : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.call<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yf// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : Base(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, box, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y}// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.C
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y~// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : Int.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yç// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return listOf.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yó// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw UnsupportedOperationException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y⁄// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(t: T) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.a.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: A<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yq// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(myArray) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yû// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        fun box(): String {
    val s = M().doTest()
    return if (s == "1:2;2:3;3:4;") "OK" else "fail: $s"
}

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val x: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : UInt.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y"// Exception in thread "main" java.lang.VerifyError: (class: org/jetbrains/kannotator/controlFlowBuilder/GraphBuilderInterpreter, method: binaryOperation signature: (Lorg/objectweb/asm/tree/AbstractInsnNode;Lorg/jetbrains/kannotator/controlFlowBuilder/AsmPossibleValues;Lorg/jetbrains/kannotator/controlFlowBuilder/AsmPossibleValues;)Lorg/jetbrains/kannotator/controlFlowBuilder/AsmPossibleValues;) Wrong return type in function
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class KProperty1(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: Cell<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÑ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun B() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÅ// Original bug: KT-18389
// Duplicated bug: KT-18050

class box(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yq// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            c: Color,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÉ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.y<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): box {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yv// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        fun Double.foo(a: Double = 1.0): Double {
    return a
}

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y⁄// Original bug: KT-18389
// Auto-generated by org.jetbrains.kotlin.generators.tests.GenerateRangesCodegenTestData. DO NOT EDIT!

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, oldVersion, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÑ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            p05: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(f, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, { x }) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, y, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yf// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : Char(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y∞// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        fun box() : String {
   if( A(null,19).hashCode() != 19) "fail"
   if( A(239,19).hashCode() != (239*31+19)) "fail"
   if( B(null).hashCode() != 0) "fail"
   if( B(239).hashCode() != 239) "fail"
   if( C(239,19).hashCode() != (239*31+19)) "fail"
   if( C(239,null).hashCode() != 239*31) "fail"
   if( D(239).hashCode() != (239)) "fail"
   if( D(null).hashCode() != 0) "fail"
   return "OK"
}

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun incrementState() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val getValue: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yê// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        companion fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yì// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<ULong>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yp// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun D() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y\// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {}

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: Boolean,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y ´// Original bug: KT-18389
// Duplicated bug: KT-18050

open class A(val x: String) {
        constructor() : this("O")

        val y: String
            get() = z
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.i.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.Int
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yΩ// Original bug: KT-18389
// !LANGUAGE: +VariableDeclarationInWhenSubject +ProperIeee754Comparisons

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

ye// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {
    var xi = 0
    var xin : Int? = 0
    var xinn : Int? = null

    var xl = 0.toLong()
    var xln : Long? = 0.toLong()
    var xlnn : Long? = null

    var xb = 0.toByte()
    var xbn : Byte? = 0.toByte()
    var xbnn : Byte? = null

    var xf = 0.toFloat()
    var xfn : Float? = 0.toFloat()
    var xfnn : Float? = null

    var xd = 0.toDouble()
    var xdn : Double? = 0.toDouble()
    var xdnn : Double? = null

    var xs = 0.toShort()
    var xsn : Short? = 0.toShort()
    var xsnn : Short? = null
}

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): foo {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
    }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
        }

yè// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
    }
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
            throw IllegalStateException()

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation( {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private  delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator():NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: ,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y|// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation(){
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() 
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yz// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw ()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration( {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yg// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String 
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
     : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yz// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw ()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y‘// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()}

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException(
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

classFakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fungenerateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(: NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator():  {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            privateval className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yx// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw 
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y>// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fungetInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throwIllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yç// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y{// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : .codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: 
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        overridefun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yz// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw ()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

         fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org..kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return 
        }
    }

yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains..codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yr// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yx// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw 
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÑ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, , codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yt// Original bug: KT-18389


class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation) {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlincodegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yi// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            ,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yZ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() 

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return .inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yo// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override 
        fun getClassName(): String {
            return className
        }
    }

yx// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw 
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y;// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) :  {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

 FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator 
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() 
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        overridefun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yr// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override  getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }}

yÅ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, ) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override  generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: <*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
             val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yç// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throwIllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String{
            return className
        }
    }

yç// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName: String {
            return className
        }
    }

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {return className
        }
    }

yç// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator() NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin..MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val : MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override  generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

x9// Original bug: KT-18389
// Duplicated bug: KT-18050



yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
             className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

         fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y{// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: ,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException)
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

         fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fungenerateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yv
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException(
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override//TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    )  org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException(
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yç// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator: NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration,codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y*// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String 
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody) {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : orgjetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className:String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(: String {
            return className
        }
    }

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throwIllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator{
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
             IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        overridefun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yc// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) 

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fungetClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody( {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext:FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator}

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        overridefun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName() String {
            return className
        }
    }

yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName():  {
            return className
        }
    }

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : .kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y|// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun () {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yà// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
             val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: ,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÉ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun (): String {
            return className
        }
    }

yo// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun () {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className}
    }

yç// Original bug: KT-18389
// Duplicated bug: KT-18050class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName():String {
            return className
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
         getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) 

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yç// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) :org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()}

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate,declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : .jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration) {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

ys// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return 
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val : String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            returndelegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÅ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            : FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yh// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*> {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrainskotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException)
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

         fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y~// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: <*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÖ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()}

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y~// Original bug: KT-18389
// Duplicated bug: KT-18050

class (
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
             IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() 
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            privateval delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private  className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÜ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from contextfun getClassName(): String {
            return className
        }
    }

ys// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : .MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yy// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun (): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yá// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

         //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yZ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() 

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yå// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÉ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun () {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody(){
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
             IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private valclassName: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yk// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            ,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

y// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            
        }
    }

yâ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
             delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÑ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            : KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yy// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            ,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yé// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private valdelegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yÇ// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }
    }

yä// Original bug: KT-18389
// Duplicated bug: KT-18050

class FakeMemberCodegen(
            private val delegate: MemberCodegen<*>,
            declaration: KtElement,
            codegenContext: FieldOwnerContext<*>,
            private val className: String
    ) : org.jetbrains.kotlin.codegen.MemberCodegen<*>(delegate, declaration, codegenContext) {

        override fun generateDeclaration() {
            throw IllegalStateException()
        }

        override fun generateBody() {
            throw IllegalStateException()
        }

        override fun generateKotlinMetadataAnnotation() {
            throw IllegalStateException()
        }

        override fun getInlineNameGenerator(): NameGenerator {
            return delegate.inlineNameGenerator
        }

        override //TODO: obtain name from context
        fun getClassName(): String {
            return className
        }


ˇˇ