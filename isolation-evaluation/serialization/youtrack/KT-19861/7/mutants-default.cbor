¿iexportTaggdefaultnoriginalSampley+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
gmutantsŸy`// Original bug: KT-21081
// Duplicated bug: KT-19861


val u = true
try
{// WITH_RUNTIME
class A(var value: Int)}
catch(e: Exception){}
finally{}


operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y…// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)


val b = true
if (b) {operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)} else {operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)}


class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y]// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)


val e = false
if (e) {class B(var a: A)} else {class B(var a: A)}


fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yÚ// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)


val c = false
when (c) {
 true -> {fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}}
 else -> {fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}}
}

y[// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A
val u = true
if (u) {(var value: Int)} else {(var value: Int)}


operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
ya// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = 
val z = false
try
{A(this?.value ?: 0 + a.value)}
catch(e: Exception){}
finally{}


class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yV// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B
val a = false
if (a) {(var a: A)} else {(var a: A)}


fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y`// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String 
val b = true
try
{{
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}}
catch(e: Exception){}
finally{}

yb// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(
val r = true
when (r) {
 true -> {a: A}
 else -> {a: A}
}
) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yL// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = 
val i = true
if (i) {A} else {A}
(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
ys// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    
val c = false
when (c) {
 true -> {var b: B? = B(A(11))}
 else -> {var b: B? = B(A(11))}
}

    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yY// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    
val f = false
if (f) {b?.a += A(31)} else {b?.a += A(31)}

    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
ya// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    
val r = false
try
{if (b?.a?.value != 42) return "FAIL 0"}
catch(e: Exception){}
finally{}

    return "OK"
}
y`// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    
val a = true
try
{return "OK"}
catch(e: Exception){}
finally{}

}
y`// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(
val g = true
try
{var value: Int}
catch(e: Exception){}
finally{}
)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yT// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(
val u = false
if (u) {var a: A} else {var a: A}
)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yd// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): 
val o = true
when (o) {
 true -> {String}
 else -> {String}
}
 {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y`// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = 
val a = true
try
{B(A(11))}
catch(e: Exception){}
finally{}

    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
ya// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    
val z = false
try
{b?.a}
catch(e: Exception){}
finally{}
 += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y`// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a 
val e = true
when (e) {
 true -> {+=}
 else -> {+=}
}
 A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yQ// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += 
val u = false
if (u) {A(31)} else {A(31)}

    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yP// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return 
val f = false
if (f) {"OK"} else {"OK"}

}
y`// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun 
val y = true
try
{A}
catch(e: Exception){}
finally{}
?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yx// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(
val p = true
when (p) {
 true -> {this?.value ?: 0 + a.value}
 else -> {this?.value ?: 0 + a.value}
}
)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y`// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = 
val b = false
when (b) {
 true -> {B}
 else -> {B}
}
(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
ya// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    
val x = false
try
{b}
catch(e: Exception){}
finally{}
?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yM// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.
val m = false
if (m) {a} else {a}
 += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
ya// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += 
val v = false
try
{A}
catch(e: Exception){}
finally{}
(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yo// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (
val h = true
when (h) {
 true -> {b?.a?.value != 42}
 else -> {b?.a?.value != 42}
}
) return "FAIL 0"
    return "OK"
}
ya// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) 
val o = false
try
{return "FAIL 0"}
catch(e: Exception){}
finally{}

    return "OK"
}
yM// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: 
val y = false
if (y) {A} else {A}
) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yj// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(
val f = false
when (f) {
 true -> {this?.value}
 else -> {this?.value}
}
 ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
ya// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value 
val m = false
when (m) {
 true -> {?:}
 else -> {?:}
}
 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yV// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 
val f = true
if (f) {0 + a.value} else {0 + a.value}
)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yj// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (
val h = false
when (h) {
 true -> {b?.a?.value}
 else -> {b?.a?.value}
}
 != 42) return "FAIL 0"
    return "OK"
}
yM// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value 
val m = true
if (m) {!=} else {!=}
 42) return "FAIL 0"
    return "OK"
}
ya// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 
val t = false
try
{42}
catch(e: Exception){}
finally{}
) return "FAIL 0"
    return "OK"
}
yS// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return 
val h = true
if (h) {"FAIL 0"} else {"FAIL 0"}

    return "OK"
}
yb// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: 
val r = false
when (r) {
 true -> {Int}
 else -> {Int}
}
)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yb// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(
val f = true
when (f) {
 true -> {this}
 else -> {this}
}
?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yQ// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.
val o = false
if (o) {value} else {value}
 ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y`// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 
val x = false
when (x) {
 true -> {0}
 else -> {0}
}
 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y`// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 
val x = false
when (x) {
 true -> {+}
 else -> {+}
}
 a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yf// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + 
val s = false
when (s) {
 true -> {a.value}
 else -> {a.value}
}
)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y_// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: 
val k = true
when (k) {
 true -> {A}
 else -> {A}
}
)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yL// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: 
val r = true
if (r) {B} else {B}
? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yd// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(
val a = false
when (a) {
 true -> {A(11)}
 else -> {A(11)}
}
)
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yM// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(
val q = true
if (q) {31} else {31}
)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yO// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (
val s = true
if (s) {b?.a} else {b?.a}
?.value != 42) return "FAIL 0"
    return "OK"
}
yP// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.
val l = true
if (l) {value} else {value}
 != 42) return "FAIL 0"
    return "OK"
}
yO// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(
val m = true
if (m) {this} else {this}
?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yM// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + 
val z = false
if (z) {a} else {a}
.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y`// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.
val q = true
try
{value}
catch(e: Exception){}
finally{}
)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y_// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(
val n = true
when (n) {
 true -> {A}
 else -> {A}
}
(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y`// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (
val n = true
try
{b}
catch(e: Exception){}
finally{}
?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yL// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.
val q = true
if (q) {a} else {a}
?.value != 42) return "FAIL 0"
    return "OK"
}
ya// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(
val v = false
when (v) {
 true -> {11}
 else -> {11}
}
))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): (String) {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return ("FAIL 0")
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"!!
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String!! {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)!!
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42!!) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int!!)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 +!! a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value!!)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): (String)? {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: (A)?) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: (Int)?)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: (A)?)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?!!.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value == 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 / a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a!!.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: 11) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(A))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ( 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if ?:b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class FAIL 0(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "B"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    ) b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42var return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

(31) B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += Aclass
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: ?)

fun box(): String {
    var b: BA = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = :(this?.value ?: 0 + a.value)

class B(var a: A)

fun box()A String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + (var a: A).value)

class Ba

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
(a: A) A(var value: Int)

operator fun A?.plusclass = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?."(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0plus
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class ?.(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (bAa?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + B.value)

class a(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(+=)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a this?.value ?: 0 + a.value A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A())

operator fun A?.plus(a: Avar value: Int = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + ".value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return aOK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun 31.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(A?)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class AA

operator fun (var value: Int)?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: () = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(AA11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

{
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
} fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String operator
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun (var a: A)?.plus(a: A) = A(this?.value ?: 0 + a.value)

class BA

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A".plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return ?FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a. A) = A(this?.value ?: 0 + a:value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + 42)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != a.value) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

) fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(operator: String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    return "FAIL 0"
    b?.a += A(31)
    if (b?.a?.value != 42) var b: B? = B(A(11))
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: var b: B? = B(A(11))) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    A
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class ()(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun boxA: String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator this?.value ?: 0 + a.value A?.plus(a: A) = A(fun)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(B(A(11))?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = this
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value += 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a ?: A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = "FAIL 0"(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return B
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B("(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return AFAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(value: A) = A(this?.a ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    if (b?.a?.value != 42) return "FAIL 0"?.a += A(31)
    b
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: OK)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "A"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value"

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK)
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun return?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) A "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: this?.value ?: 0 + a.value)

operator fun A?.plus(a: A) = A(Int)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: b)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    Int?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(?.?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.athisvalue != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += b?.a?.value
    if (A(31) != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class ?:(var value: Int)

operator fun A?.plus(a: A) = A(this?.value A 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: return)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) A "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: String)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): Int {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: A(11) + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(0)
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(b)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (this?.value ?: 0 + a.value?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

!= fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value operator 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31return "FAIL 0"
    if (b?.a?.value != 42) )
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a."OK")

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return value
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A31 = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A())
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A("?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return thisOK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: b?.a += A(31)) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    A
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?OKplus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "."
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(B?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = this(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + fun.value)

class B(var a: A)

a box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + B.value)

class B(var a: A)

fun box(): String {
    var b: B? = a(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: b?.a)

fun box(): String {
    var b: B? = B(A(11))
    A += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(})
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
31
y+// Original bug: KT-21081
Int

// WITH_RUNTIME
class A(var value: // Duplicated bug: KT-19861)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+.
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?// Original bug: KT-21081plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class BB

fun box(): String {
    var b: (var a: A)? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = AB?

class B(var a: A)

fun box(): String {
    var b: (this?.value ?: 0 + a.value) = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = String

class B(var a: A)

fun box(): A(this?.value ?: 0 + a.value) {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class Areturn

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    (var value: Int) "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(thisclassvalue ?: 0 + a.value)

?. B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun return "OK"?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    A
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

A fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += operator(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = 42(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != A) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
(31)

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A// Duplicated bug: KT-19861
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a ( A(31)
    if +=b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(b?.a += A(31)?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    this
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

(11)
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A// WITH_RUNTIME)
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = fun

class B(var a: A)

A(this?.value ?: 0 + a.value) box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

fun fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

operator box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
OK

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "// Duplicated bug: KT-19861"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class A(31)(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += B
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: value) = A(this?.value ?: 0 + a.A)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

a

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var // WITH_RUNTIME
class A(var value: Int): A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a) = A(this?.value ?: 0 + a: A.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    b?.a (if?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus((var a: A): A) = A(this?.value ?: 0 + a.value)

class Ba

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

var b: B? = B(A(11)) fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    operator
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = b?.a?.value != 42
    b?.a += A(31)
    if (B(A(11))) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A42

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != (var value: Int)) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + ).value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42a return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: 11 = B(A(B?))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42(var a: A) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: A + a.value)

class B(var a: 0)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun )?.plus(a: AA = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

31 fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(operator)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + B)

class B(var a: A)

fun box(): String {
    var b: a.value? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun return.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) A? "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

42 B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != class) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus()a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(: String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: b) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    A?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: :) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box()A String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: (? = B(A(11))
    b?.a += AB31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: BFAIL 0 = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "?"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: value = B(A(11))
    b?.a += A(31)
    if (b?.a?.B? != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus)a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11()
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A

class B(var a: A(this?.value ?: 0 + a.value))

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(b(11))
    b?.a += A(31)
    if (A?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(OK)
    if (b?.a?.value != 42) return "FAIL 0"
    return "31"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(

fun box(var a: A)): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun if.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    A? (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.B?(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: plus = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var var: A)

fun box(): String {
    a b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plusvar a: A = A(this?.value ?: 0 + a.value)

class B((a: A))

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

b
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var // WITH_RUNTIME: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

A
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: (11))

fun box(): String {
    var b: B? = B(AA)
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var +=: B? = B(A(11))
    b?.a b A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun plus?.A(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

A(11) fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(operator)
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

b?.a?.value != 42 fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (operator) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): B {
    var b: String? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: 0 + a.value) = A(this?.value ?: A)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A=

operator fun A?.plus(a: A) (var value: Int) A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: )) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31A
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A({
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
} ?: 0 + a.value)

class B(var a: A)

fun box(): String this?.value
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String b
    var b: B? = B(A(11))
    b?.a += A(31)
    if ({?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: Bb?.a = B(A(11))
    b?.a += A(31)
    if (??.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus"OK"a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return (
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

42

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != // WITH_RUNTIME
class A(var value: Int)) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

B

class B(var a: A)

fun box(): String {
    var b: operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b!=a += A(31)
    if (b?.a?.value ?. 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = (var a: A)(this?.value ?: 0 + a.value)

class BA

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b+= B? = B(A(11))
    b?.a : A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator b?.a?.value != 42 A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (fun) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = Ab?.a?.value != 42

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if ((this?.value ?: 0 + a.value)) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

// Duplicated bug: KT-19861
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) " A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return =FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    "
    if (b?.a?.value != 42) return "FAIL 0b?.a += A(31)
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?."?.value != 42) return "FAIL 0"
    return "OKa
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + ).value)

class B(var a: A)

fun box(a: String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11)!=
    b?.a += A(31)
    if (b?.a?.value ) 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: Athis = A()?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = BAA(11))
    b?.a += ((31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(A: a) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = 11(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(A))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
} A(this?.value ?: 0 + a.value)

class B(var a: A)

=
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class BOK

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "(var a: A)"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 31 a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(+)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A()31
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: 11)

fun box(): String {
    var b: B? = B(A(A))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.?.)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (bvaluea?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plusvar = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    (a: A) b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = box(this?.value ?: 0 + a.value)

class B(var a: A)

fun A(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = (Athis?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: (31))

fun box(): String {
    var b: B? = B(A(11))
    b?.a += AA
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.return += A(31)
    if (b?.a?.value != 42) a "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

A fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(operator(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: ?.) = A(thisAvalue ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(return(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    A "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(return "FAIL 0"(11))
    b?.a += A(31)
    if (b?.a?.value != 42) A
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = if (b?.a?.value != 42) return "FAIL 0"(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    A
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class BAvar a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += ((31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: =)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? Int B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += (31)A
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

(var a: A)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B// WITH_RUNTIME
class A(var value: Int)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun ?.?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    bAa += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var 31: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(value)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: B) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: A? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = )

class B(var a: A)

fun box(A(this?.value ?: 0 + a.value): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b"OK" B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return :
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun )?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11)A
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.31 += A(a)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun return "FAIL 0".plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) A?
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this:value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b?. B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.?)

class B(var a: A)

fun box(): String {
    var b: Bvalue = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(AA11))
    b?.a += ((31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ? 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B?: = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: ()

class B(var a: A)

fun box(): String {
    var b: B? = B0 + a.valueA(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value 11 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(?:))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
A A(var value: Int)

operator fun A?.plus(a: class) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B?.

fun box(): String {
    var b: B? = B(A(11))
    b(var a: A)a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(return "OK"))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    11
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun (31)?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += AA
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box()} String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
:
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(var value: Int)): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun a(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.box?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

. fun A?.plus(a: A) = A(this?.value ?: 0 + aoperatorvalue)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
var value: Int A(class)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A11

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A((var value: Int)))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: "? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return BOK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = "OK"

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return A(this?.value ?: 0 + a.value)
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun ?:?.plus(a: A) = A(this?.value A 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: !=)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value A 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = Afunthis?.value ?: 0 + a.value)

class B(var a: A)

( box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(A)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: var value: Int)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value B(A(11)) 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = ?:
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

A

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += // WITH_RUNTIME
class A(var value: Int)(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a42 A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != :) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + B?.value)

class B(var a: A)

fun box(): String {
    var b: a = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String A
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (OK) return "FAIL 0"
    return "b?.a?.value != 42"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: (31)) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += AA
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.b?.a?.value != 42 += A(31)
    if (a) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: FAIL 0)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "Int"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = B?(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: A = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.))

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11)value
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
" A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return classFAIL 0"
    return "OK"
}
y+B
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: // Original bug: KT-21081? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = 11

class B(var a: A)

fun box(): String {
    var b: B? = B(A(A(this?.value ?: 0 + a.value)))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var A(11): B? = B(b)
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): A(11) {
    var b: B? = B(String)
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

A fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: operator)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

a

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.// WITH_RUNTIME
class A(var value: Int)?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A+=

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a (this?.value ?: 0 + a.value) A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.return(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) plus "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(0 ?: this?.value + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

a.value
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + // WITH_RUNTIME)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var return: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    value "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: 42)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != Int) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    value += A(31)
    if (b?.a?.b?.a != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = value(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.A != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b+=a ?. A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: B)

fun box(): String {
    var b: B? = A(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + A.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += a(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator b?.a?.value A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (fun != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11)OK
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return ")"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    return "OK" (b?.a?.value != 42) return "FAIL 0"
    if
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A)this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31(
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun "FAIL 0"(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return box
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    " "OKreturn
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: )) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(A: String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.valueB(A(11))

class B(var a: A)

fun box(): String {
    var b: B? = )
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.)value

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plusreturn = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) (a: A) "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11?.)
    b?.a += A(31)
    if (b)a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

String

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): // WITH_RUNTIME
class A(var value: Int) {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class return "FAIL 0"(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) A
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value a 0 + a.value)

class B(var ?:: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(11)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(var value: Int))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A42var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != () return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (return "OK") return "FAIL 0"
    b?.a?.value != 42
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun )?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: AA

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun b?.a(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (box?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class b?.a += A(31)(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    B
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = A
    b?.a += B(A(11))(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(?.)
    if (b31a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42" return )FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(ab A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var :: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + b?.a += A(31))

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    a.value
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.b?.a?.value != 42 ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (value) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A("?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return thisFAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A((?.value ?: 0 + a.value)

class B(var a: A)

fun boxthis): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(Areturn "OK")
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    (11)
}
y+:
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b// Original bug: KT-21081 B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
(

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A// Duplicated bug: KT-1986131)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = .(this?.value ?: 0 + aAvalue)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
} a.value)

class B(var a: A)

fun box(): String +
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    " (b?.a?.value != 42) return "FAIL 0"
    return "OKif
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(thisOKvalue ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "?."
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(b?.a?.value != 42)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (var value: Int) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = 31(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(A)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class FAIL 0(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "A"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun boxreturn "FAIL 0": String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) ()
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun value.plus(a: A) = A(this?.A? ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun a.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var A?: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = "FAIL 0"
    b?.a += A(31)
    if (b?.a?.value != 42) return B(A(11))
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
})

A
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.return "OK" != 42) return "FAIL 0"
    value
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: String + a.value)

class B(var a: A)

fun box(): 0 {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: B)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = Int(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A(

fun box(): String {
    var b: B? = B(A)11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?()plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box.: String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box()A String {
    var b: B? = B(:(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): value {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.String != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b!=a?.value ?. 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B((31))
    b?.a += AA(11)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun this?.plus(a: A) = A(A?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: ") = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return AOK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.A(31) ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += value
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(thisStringvalue ?: 0 + a.value)

class B(var a: A)

fun box(): ?. {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): b?.a += A(31) {
    var b: B? = B(A(11))
    String
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(value?.value ?: 0 + a.this)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun Aa: A.plus(?) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): ?. {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.aStringvalue != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Intb

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var ): B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class BA

fun box(): String {
    var b: B? = B(A(11))
    b?.a += (var a: A)(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun String.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): A? {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(?. ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (bthis?.valuea?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = ((this?.value ?: 0 + a.value)

class BAvar a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + ?.)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    ba.valuea += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A?)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator () A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun boxfun: String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator 11 A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(fun))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?:plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(). String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(!=: String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value ) 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(Aa)
    b?.a += A(31)
    if (b?.(11)?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += return
    if (b?.a?.value != 42) return "FAIL 0"
    A(31) "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B((31) a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += Avar
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(A value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: var)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

"FAIL 0"

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return class B(var a: A)
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + aclass B(var a: A)value)

.

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): b?.a?.value != 42 {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (String) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: return "FAIL 0") = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) A
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: A? = B(A(11))
    b?.a += B(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

"

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return class B(var a: A)FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

b fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    operator?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 } a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
+
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class Aa.valuevar value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + ()

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

FAIL 0 B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "class"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun B??.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: A = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    FAIL 0 += A(31)
    if (b?.a?.value != 42) return "b?.a"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.A ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(value(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?:value ?. 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(b?.a?.value != 42 ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (this?.value) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var ): B? = B(A(11))
    b?.a += A(31b
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.() ?: 0 + a.value)

class B(var a: A)

fun boxvalue: String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun value?.plus(a: A) = A(this?.value ?: 0 + a.A)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.!= value 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

31

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value))
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var A: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += a(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(String ?: 0 + a.value)

class B(var a: A)

fun box(): this?.value {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) A A(this?.value ?: 0 + a.value)

class B(var a: =)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(class B(var a: A) value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

var

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A:

operator fun A?.plus(a(var value: Int) A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
. A(var value: Int)

operator fun A?classplus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class BB?var a: A)

fun box(): String {
    var b: ( = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A{
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String (
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String A
    var b: B? = B(A(11))
    b?.a += {(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun boxb: String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (()?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(")
    if (b?.a?.value != 42) return 31FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var A: Int)

operator fun A?.plus(a: A) = value(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11a)
    b?.a += A(31)
    if (b?.)?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: Afun

) box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: B)

fun box(): String {
    var b: A? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.class(a: A) = A(this?.value ?: 0 + a.value)

plus B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?!=plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value . 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(() ?: 0 + a.value)

class B(var a: A)

fun boxthis?.value: String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 31 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(0)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this(value ?: 0 + a.value)

class B?.var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class b(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (B?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(FAIL 0)
    if (b?.a?.value != 42) return "31"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(value value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.var)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(return "OK"(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    A
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class BA(11)var a: A)

fun box(): String {
    var b: B? = B(()
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus0 + a.value = A(this?.value ?: (a: A))

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var aB A)

fun box(): String {
    var b: B? = :(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 a a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.+?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += FAIL 0
    if (b?.a?.value != 42) return "A(31)"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class B(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = A(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box): String {
    var b: B? = B(A(11)()
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

return "OK" box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    fun
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = +=
    b?.a B(A(11)) A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(A value: Int)

operator fun var?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(b?.a += A(31))

fun box(): String {
    var b: B? = B(A(11))
    var a: A
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.valueb?.a

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if ()?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: this?.value ?: 0 + a.value) = A(A)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(31: String {
    var b: B? = B(A(11))
    b?.a += A())
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = b(A(11))
    B?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    "FAIL 0"?.a += A(31)
    if (b?.a?.value != 42) return b
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?)plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31.
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = this?.value ?: 0 + a.value(A)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class AA

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += (var value: Int)(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) A(this?.value ?: 0 + a.value) =

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(A) = A(this?.value ?: 0 + a.value)

class B(var a: a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun (?.plusAa: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A{
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String (var value: Int)
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(return "FAIL 0")

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) var value: Int
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(a)
    b?.A(11) += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = ?(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: BA = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: b? = B(A(11))
    b?.a += A(31)
    if (B?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ) 0 + a.value)

class B(var a: A)

fun box(?:: String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += if (b?.a?.value != 42) return "FAIL 0"
    A(31)
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) if A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    = (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(A a: var)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A: = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b) B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    return "FAIL 0" += A(31)
    if (b?.a?.value != 42) b?.a
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(b?.a?.value != 42))
    b?.a += A(31)
    if (11) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
this?.value

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(// Duplicated bug: KT-19861 ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = (

class B(var a: A)

fun boxA(this?.value ?: 0 + a.value)): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "fail"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.A?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = x(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var it: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: String)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y>// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: ProjectJsonFormatter)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + foo.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(ss?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(Any: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y(// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "abc"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.x ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class c(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y1// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(Boolean: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A()
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(val fn: IFn)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 0) return "FAIL 0"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "OK"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = size(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(delayedQueue.poll() ?: break)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yÈ// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

abstract class Base {
    abstract fun fromClass(id: Id)
    abstract fun fromClass(name: Name)
    
    abstract fun fromBoth(id: Id)
    abstract fun fromBoth(name: Name)
}

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.Int?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.box += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B("O")
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(k+=x)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.box ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "O"
}
y/// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    list3?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y/// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.ULong?.value != 42) return "FAIL 0"
    return "OK"
}
y7// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: WithCompanion) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): hashCode {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var equals: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 1) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A()

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(0..2)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y5// Original bug: KT-21081
// Duplicated bug: KT-19861

// no local optimizations
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (a3.prop != "") return "FAIL 0"
    return "OK"
}
y5// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): COMPARABLE_RANGE {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = C(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(0u))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 10 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y!// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (y == 0L) return "FAIL 0"
    return "OK"
}
y0// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: String)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y(// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(entry)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y0// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: String? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += s(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y3// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.MIN_VALUE += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y/// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + list2.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y0// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: append)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y:// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(override var value: Int)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y0// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun String?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "O"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 99) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: T = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(-0.0)
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + T.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.Int)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.Nested != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: M)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.bad?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(val a: Int)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    Any?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + b.foo())

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y/// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = _kind(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.box(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y1// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + intArray.size)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(0)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y3// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: Throwable)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: this)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(0))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: box) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    val i = 1
    if (i.getter != 1) return "getter failed"

    return "OK"
}
y(// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): bar {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y4// Original bug: KT-21081
// Duplicated bug: KT-19861

// KJS_WITH_FULL_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y6// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "fail 2 !in Double"
    return "OK"
}
y/// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.Inner += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += test(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 ! a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y3// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: testIList? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y7// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "Fail getFromLambda"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: get) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    T?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y3// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(COLUMN_TITLES?.size ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y$// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(i)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y ñ// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun less3(a: Float?, b: Float?) = a != null && b != null && a < b
y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    this + s
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = set(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B("a")
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y4// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return st.x1 + st.x2
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.aValue ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (Long?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yC// Original bug: KT-21081
// java.lang.ClassNotFoundException: kotlin.Nothing

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y/// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return s[2, -2]
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.z)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var xs: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: y == 0L)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: s? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y0// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.String += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.result != 42) return "FAIL 0"
    return "OK"
}
y;// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    (thisRef as? Foo)?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(val t: T)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(1))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

private fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y7// Original bug: KT-21081
// !LANGUAGE: +ProperIeee754Comparisons

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yD// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class Bprotected constructor(val arg: Int)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y%// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

fun <T: Number?> foo(t: T) {
    (t ?: 42).toInt()
}

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): Boolean {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    t.cause != t
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.this != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class box(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y0// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = String(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: foo)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = plus(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y0// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun Double?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y/// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (s?.foo()?.value != 42) return "FAIL 0"
    return "OK"
}
y0// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    String?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.log ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += foo(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 38 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y:// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(intArrayOf(0, 1, 42))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(val x: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value != 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(IFoo(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = i(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y©// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + Test("OK").execute(object : KotlinCallback<SomeTrait> {
        override fun on(t: SomeTrait) {
            f = "OK"
        }
    }))

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y5// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(boxToNullableAny(null).boxed != null)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (Test().outer() == 1) "OK" else "fail"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a in A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: x)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: Long) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.A += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y:// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (M<Int>(p)?.nulled()?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: Any? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Any)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y(// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

const fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = add(i)
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yx// Auto-generated by org.jetbrains.kotlin.generators.tests.GenerateRangesCodegenTestData. DO NOT EDIT!
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (result = "OK") return "FAIL 0"
    return "OK"
}
y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (aai.t.t != 1) return "FAIL 0"
    return "OK"
}
y0// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(ArrayList?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y4// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: null ?: null ?: "OK")

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y%// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(val x: S)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var s: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var invokeOnA = invokeOnA(A())
    if (invokeOnA != "AMAF") return "fail 1: $invokeOnA"

    invokeOnA = invokeOnA(Z())
    if (invokeOnA != "ZMZF") return "fail 2: $invokeOnA"

    val z = Z().test()
    if (z != "ZM") return "fail 3: $z"

    val f = Z().field
    if (f != "ZF") return "fail 4: $f"

    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(MaxL)
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y0// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = String(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (s?.length != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(1L)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value == 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: T)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y2// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = iterator(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y0// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: String) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y3// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = minusZero(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = x(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun size?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(value) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y3// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: invokeOrder += "1_")

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A("OK")

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: x)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y/// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun String.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.id += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y/// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var value: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(null)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y?// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun ParseError<TInput, *>?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(op: ()-> Unit)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (bar?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y6// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: C1().toString() != "C")

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = s(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yi// Original bug: KT-21081
// Duplicated bug: KT-19861

class A {
    inner class B(val a: Int = 1,
            val b: Int = 2,
            val c: Int = 3,
            val d: Int = 4,
            val e: Int = 5,
            val f: Int = 6,
            val g: Int = 7,
            val h: Int = 8,
            val i: Int = 9,
            val j: Int = 10,
            val k: Int = 11,
            val l: Int = 12,
            val m: Int = 13,
            val n: Int = 14,
            val o: Int = 15,
            val p: Int = 16,
            val q: Int = 17,
            val r: Int = 18,
            val s: Int = 19,
            val t: Int = 20,
            val u: Int = 21,
            val v: Int = 22,
            val w: Int = 23,
            val x: Int = 24,
            val y: Int = 25,
            val z: Int = 26,
            val aa: Int = 27,
            val bb: Int = 28,
            val cc: Int = 29,
            val dd: Int = 30,
            val ee: Int = 31,
            val ff: Int = 32) {
        override fun toString(): String {
            return "$a $b $c $d $e $f $g $h $i $j $k $l $m $n $o $p $q $r $s $t $u $v $w $x $y $z $aa $bb $cc $dd $ee $ff"
        }
    }
}

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.rangeTo != 42) return "FAIL 0"
    return "OK"
}
y(// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    val a = A("Fail")
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = A(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y?// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (u.toString() != ts) throw AssertionError(u.toString())
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Double)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (test?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B()
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

fun boxToNullableAny(x: I32?) = BoxAny(x)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y$// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return d
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun V?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(123))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y2// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (s == "1:2;2:3;3:4;") "OK" else "fail: $s"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(b))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.f)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

fun box() = X.B.test

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yP// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "Wrong elements for 0u downTo MaxUI step 3: "
    return "OK"
}
y4// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(false, true))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yÙ// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    if (-0.0F < 0.0F) return "fail 0"
    if (less1(-0.0F, 0.0F)) return "fail 1"
    if (less2(-0.0F, 0.0F)) return "fail 2"
    if (less3(-0.0F, 0.0F)) return "fail 3"
    if (less4(-0.0F, 0.0F)) return "fail 4"

    if (less5(-0.0F, 0.0F)) return "fail 5"

    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (t.cause != null) return "FAIL 0"
    return "OK"
}
y4// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var fooStorage: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = bar()

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = box(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.range5)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y/// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: subList)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y/// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    "K"?.f() += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A())
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = s(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(result())
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun Bar?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var foo: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y@// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class Derived1() : Base(), Abstract {}

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y¹// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    val zero: Any = 0.0
    val floatZero: Any = -0.0F
    if (zero is Double && floatZero is Float) {
        if (zero == floatZero) return "fail 1"

        if (zero <= floatZero) return "fail 2"

        return "OK"
    }

    return "fail"
}
y=// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "mlitr as MutableIterator"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: Int? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(a?.plus(10) ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += a2(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + box.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y(// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.A(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y Ï// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String { Host.ok() }
y0// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    s?.get(0) += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: Intf)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += x(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yŒ// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

open class A(val x: String) {
        constructor() : this("O")

        val y: String
            get() = z
    }

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = j(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun ref?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(0.0))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + add.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var _: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.T?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: a1.prop != 1)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: x != nn)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y2// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (intRange?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.first)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a != A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y2// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(val bar: String)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: s)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + prop.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.b ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A()

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y8// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) {
       return "fail"
    }
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: f)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
yO// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return Father("fail").Child("OK").test().work()
}
y5// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.getReceiver?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.v1(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun foo(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// WITH_RUNTIME

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// IGNORE_BACKEND: JVM_IR

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y ñ// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
                return "fail 3"
            }
y7// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(StringBuilder(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: UInt)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y$// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (a[0] == 2) "OK" else "fail"
    return "OK"
}
y:// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: MyAlias.O.name + MyAlias.K)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y4// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(result: Result<T>)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    c.prop != 1
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y=// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (formatter.format(Project()) != null) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a step A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var String: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y=// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 9223372036854775807L) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(i: Int)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "e"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun Any?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(a[0] = "OK")

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value > 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.l != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(2))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(239L)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y0// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    a?.result += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y:// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return materializer!!.invoke()
    return "OK"
}
y2// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + SuperFoo.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.foo)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(bar(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(val x: Int)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y#// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B()

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    K?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y2// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "Test 4 failed"
    return "OK"
}
y0// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class String(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y#// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b.x + b.y) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (T?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun T.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y<// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: left > value && left > value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(val z: String)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y/// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun Double.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y,// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = X1(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun a?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y.// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.test?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = box(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + Any.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(3))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y6// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + Foo.FOO.callback())

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y-// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: Int)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y/// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.fLong?.value != 42) return "FAIL 0"
    return "OK"
}
y4// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (nCInt3?.value?.value != 42) return "FAIL 0"
    return "OK"
}
y5// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.AssertionError(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a !! A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y¤// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

fun box(): String {
    val c = C()
    val result = "${c.b.value} ${c.c.value} ${c.d.value} ${c.e}"
    if (result != "O,K O.K O;K O|K") return "fail: $result"

    return "OK"
}

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = l(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (true) return "FAIL 0"
    return "OK"
}
y+// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(42)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y+    return "OK"
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
// Original bug: KT-21081
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A)
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return 
}
y // Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if ( != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
     (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: ? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y Â// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String 
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String 
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y ñ// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)



class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861



operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return ""
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: )

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.avalue != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value  42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B((11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?. != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += (31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y(// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A( value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class (var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    ?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a  A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK
}
y!// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
     += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y$// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += 
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?:  + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a +=A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y%// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42)  "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b:B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y(// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: )

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a+= A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return"OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) 
    return "OK"
}
y // Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: )

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun ?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIMEclass A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?. ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0
    return "OK"
}
y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

 B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: ) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    ba += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value:Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0  a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value  0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861


class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y(// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator  A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B?  B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a:A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
 A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y // Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(thisvalue ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    varb: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator funA?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y °// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)


y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y#// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return 
    return "OK"
}
y#// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

 fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y%// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return ""
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0+ a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B?= B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?:0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class (var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A)= A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = (this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"

y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y%// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box():  {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String{
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b:  = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = 

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = Athis?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun .plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081


// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

funbox(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus() = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11)
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

classB(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box():String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = (A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = BA(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y%// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"}
y#// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = 
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y(// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

 box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != ) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (ba?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(vara: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42 return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? =B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y%// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
     "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plusa: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(: String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
classA(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operatorfun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if(b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42)return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + .value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box() String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?. += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class Avar value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box: String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y // Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A( ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y(// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
     b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y'// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(varvalue: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y(// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun (): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + avalue)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class Bvar a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value!= 42) return "FAIL 0"
    return "OK"
}
y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var : Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y&// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var : A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y(// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B( a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)



fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y$// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + )

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) =A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y)// Original bug: KT-21081
// Duplicated bug: KT-19861// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value !=42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a:A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var b: B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y*// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {
    var : B? = B(A(11))
    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
y// Original bug: KT-21081
// Duplicated bug: KT-19861

// WITH_RUNTIME
class A(var value: Int)

operator fun A?.plus(a: A) = A(this?.value ?: 0 + a.value)

class B(var a: A)

fun box(): String {

    b?.a += A(31)
    if (b?.a?.value != 42) return "FAIL 0"
    return "OK"
}
ÿÿ